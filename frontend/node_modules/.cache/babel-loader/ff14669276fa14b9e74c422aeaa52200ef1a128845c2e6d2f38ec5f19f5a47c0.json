{"ast":null,"code":"//Class API\nclass Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    // this._headers = options.headers;\n    // this._authorization = options.headers.authorization;\n  }\n\n  //Get response function\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  //get info about user\n  getUserInfo(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(this._getResponseData);\n  }\n\n  //get array cards\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._getResponseData);\n  }\n\n  //update info about user\n  setOwnerInfo(ownerInfo, token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        name: ownerInfo.nameInput,\n        about: ownerInfo.jobInput\n      })\n    }).then(this._getResponseData);\n  }\n\n  //update user avatar\n  setOwnerAvatar(ownerAvatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: ownerAvatar.linkAvatar\n      })\n    }).then(this._getResponseData);\n  }\n\n  //create new card\n  addNewCard(cardInfo) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardInfo.cardName,\n        link: cardInfo.link\n      })\n    }).then(this._getResponseData);\n  }\n\n  //put like on card\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  //delete like on card\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  //delete card created by user\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n}\nconst api = new Api({\n  baseUrl: 'http://localhost:3000'\n  // headers: {\n  //     authorization: '0be97cdd-5214-4857-975b-3ef352f3ad1f',\n  //     'Content-Type': 'application/json'\n  // }\n});\n\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_getResponseData","res","ok","json","Promise","reject","status","getUserInfo","token","fetch","headers","then","getCards","authorization","_authorization","setOwnerInfo","ownerInfo","method","body","JSON","stringify","name","nameInput","about","jobInput","setOwnerAvatar","ownerAvatar","_headers","avatar","linkAvatar","addNewCard","cardInfo","cardName","link","addLike","cardId","deleteLike","deleteCard","api"],"sources":["/Users/dk/dev/frontend/src/utils/api.js"],"sourcesContent":["//Class API\nclass Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        // this._headers = options.headers;\n        // this._authorization = options.headers.authorization;\n    }\n\n    //Get response function\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        else {\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    }\n\n    //get info about user\n    getUserInfo(token) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n            .then(this._getResponseData)\n    }\n\n    //get array cards\n    getCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: {\n                authorization: this._authorization\n            }\n        })\n            .then(this._getResponseData)\n    }\n\n    //update info about user\n    setOwnerInfo(ownerInfo, token) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n              },\n            body: JSON.stringify({\n                name: ownerInfo.nameInput,\n                about: ownerInfo.jobInput\n            })\n        })\n            .then(this._getResponseData)\n    }\n\n    //update user avatar\n    setOwnerAvatar(ownerAvatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: ownerAvatar.linkAvatar\n            })\n        })\n            .then(this._getResponseData)\n    }\n\n    //create new card\n    addNewCard(cardInfo) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: cardInfo.cardName,\n                link: cardInfo.link\n            })\n        })\n            .then(this._getResponseData)\n    }\n\n    //put like on card\n    addLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n\n    //delete like on card\n    deleteLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n\n    //delete card created by user\n    deleteCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'http://localhost:3000',\n    // headers: {\n    //     authorization: '0be97cdd-5214-4857-975b-3ef352f3ad1f',\n    //     'Content-Type': 'application/json'\n    // }\n});\n\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}