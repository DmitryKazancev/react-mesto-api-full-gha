{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nexport default function useFormValidator() {\n  _s();\n  const [inputValues, setInputValues] = useState({});\n  const [inputErrors, setInputErrors] = useState({});\n  const [isValid, setIsValid] = useState(false);\n  const [isInputValid, setIsInputValid] = useState({});\n  function handleChange(evt) {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    const validationMessage = evt.target.validationMessage;\n    const valid = evt.target.validity.valid;\n    const form = evt.target.form;\n    setIsValid(form.checkValidity());\n    setInputValues(lastValues => {\n      return {\n        ...lastValues,\n        [name]: value\n      };\n    });\n    setInputErrors(lastErrors => {\n      return {\n        ...lastErrors,\n        [name]: validationMessage\n      };\n    });\n    setIsInputValid(lastIsInputValid => {\n      return {\n        ...lastIsInputValid,\n        [name]: valid\n      };\n    });\n  }\n  function resetForm() {\n    let formData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    setInputValues(formData);\n    setInputErrors({});\n    setIsValid(false);\n    setIsInputValid({});\n  }\n  const setInputValue = useCallback((name, value) => {\n    setInputValues(lastValues => {\n      return {\n        ...lastValues,\n        [name]: value\n      };\n    });\n  }, []);\n  return {\n    inputValues,\n    inputErrors,\n    isValid,\n    isInputValid,\n    handleChange,\n    resetForm,\n    setInputValue\n  };\n}\n_s(useFormValidator, \"lFME4Dzlubpx7ToA6plZC2tIavI=\");","map":{"version":3,"names":["useCallback","useState","useFormValidator","_s","inputValues","setInputValues","inputErrors","setInputErrors","isValid","setIsValid","isInputValid","setIsInputValid","handleChange","evt","name","target","value","validationMessage","valid","validity","form","checkValidity","lastValues","lastErrors","lastIsInputValid","resetForm","formData","arguments","length","undefined","setInputValue"],"sources":["/Users/dk/dev/mesto-react/src/utils/useFormValidator.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nexport default function useFormValidator() {\n\n    const [inputValues, setInputValues] = useState({});\n    const [inputErrors, setInputErrors] = useState({});\n    const [isValid, setIsValid] = useState(false);\n    const [isInputValid, setIsInputValid] = useState({});\n\n    function handleChange(evt) {\n        const name = evt.target.name;\n        const value = evt.target.value;\n        const validationMessage = evt.target.validationMessage;\n        const valid = evt.target.validity.valid;\n        const form = evt.target.form;\n\n        setIsValid(form.checkValidity());\n\n        setInputValues((lastValues) => {\n            return { ...lastValues, [name]: value }\n        })\n\n        setInputErrors((lastErrors) => {\n            return { ...lastErrors, [name]: validationMessage }\n        })\n\n        setIsInputValid((lastIsInputValid) => {\n            return { ...lastIsInputValid, [name]: valid }\n        })\n    }\n\n    function resetForm(formData = {}) {\n        setInputValues(formData);\n        setInputErrors({});\n        setIsValid(false);\n        setIsInputValid({});\n    }\n\n    const setInputValue = useCallback((name, value) => {\n        setInputValues((lastValues) => {\n            return { ...lastValues, [name]: value }\n        })\n    }, [])\n\n    return { inputValues, inputErrors, isValid, isInputValid, handleChange, resetForm, setInputValue }\n}"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAEvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpD,SAASW,YAAYA,CAACC,GAAG,EAAE;IACvB,MAAMC,IAAI,GAAGD,GAAG,CAACE,MAAM,CAACD,IAAI;IAC5B,MAAME,KAAK,GAAGH,GAAG,CAACE,MAAM,CAACC,KAAK;IAC9B,MAAMC,iBAAiB,GAAGJ,GAAG,CAACE,MAAM,CAACE,iBAAiB;IACtD,MAAMC,KAAK,GAAGL,GAAG,CAACE,MAAM,CAACI,QAAQ,CAACD,KAAK;IACvC,MAAME,IAAI,GAAGP,GAAG,CAACE,MAAM,CAACK,IAAI;IAE5BX,UAAU,CAACW,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC;IAEhChB,cAAc,CAAEiB,UAAU,IAAK;MAC3B,OAAO;QAAE,GAAGA,UAAU;QAAE,CAACR,IAAI,GAAGE;MAAM,CAAC;IAC3C,CAAC,CAAC;IAEFT,cAAc,CAAEgB,UAAU,IAAK;MAC3B,OAAO;QAAE,GAAGA,UAAU;QAAE,CAACT,IAAI,GAAGG;MAAkB,CAAC;IACvD,CAAC,CAAC;IAEFN,eAAe,CAAEa,gBAAgB,IAAK;MAClC,OAAO;QAAE,GAAGA,gBAAgB;QAAE,CAACV,IAAI,GAAGI;MAAM,CAAC;IACjD,CAAC,CAAC;EACN;EAEA,SAASO,SAASA,CAAA,EAAgB;IAAA,IAAfC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAC5BtB,cAAc,CAACqB,QAAQ,CAAC;IACxBnB,cAAc,CAAC,CAAC,CAAC,CAAC;IAClBE,UAAU,CAAC,KAAK,CAAC;IACjBE,eAAe,CAAC,CAAC,CAAC,CAAC;EACvB;EAEA,MAAMmB,aAAa,GAAG9B,WAAW,CAAC,CAACc,IAAI,EAAEE,KAAK,KAAK;IAC/CX,cAAc,CAAEiB,UAAU,IAAK;MAC3B,OAAO;QAAE,GAAGA,UAAU;QAAE,CAACR,IAAI,GAAGE;MAAM,CAAC;IAC3C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEZ,WAAW;IAAEE,WAAW;IAAEE,OAAO;IAAEE,YAAY;IAAEE,YAAY;IAAEa,SAAS;IAAEK;EAAc,CAAC;AACtG;AAAC3B,EAAA,CA3CuBD,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}