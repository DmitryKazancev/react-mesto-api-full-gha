{"ast":null,"code":"import _defineProperty from\"/Users/dk/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/dk/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/dk/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useCallback,useState}from\"react\";export default function useFormValidator(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),inputValues=_useState2[0],setInputValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),inputErrors=_useState4[0],setInputErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),isInputValid=_useState8[0],setIsInputValid=_useState8[1];function handleChange(evt){var name=evt.target.name;var value=evt.target.value;var validationMessage=evt.target.validationMessage;var valid=evt.target.validity.valid;var form=evt.target.form;setIsValid(form.checkValidity());setInputValues(function(lastValues){return _objectSpread(_objectSpread({},lastValues),{},_defineProperty({},name,value));});setInputErrors(function(lastErrors){return _objectSpread(_objectSpread({},lastErrors),{},_defineProperty({},name,validationMessage));});setIsInputValid(function(lastIsInputValid){return _objectSpread(_objectSpread({},lastIsInputValid),{},_defineProperty({},name,valid));});}function resetForm(){var formData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};setInputValues(formData);setInputErrors({});setIsValid(false);setIsInputValid({});}var setInputValue=useCallback(function(name,value){setInputValues(function(lastValues){return _objectSpread(_objectSpread({},lastValues),{},_defineProperty({},name,value));});},[]);return{inputValues:inputValues,inputErrors:inputErrors,isValid:isValid,isInputValid:isInputValid,handleChange:handleChange,resetForm:resetForm,setInputValue:setInputValue};}","map":{"version":3,"names":["useCallback","useState","useFormValidator","_useState","_useState2","_slicedToArray","inputValues","setInputValues","_useState3","_useState4","inputErrors","setInputErrors","_useState5","_useState6","isValid","setIsValid","_useState7","_useState8","isInputValid","setIsInputValid","handleChange","evt","name","target","value","validationMessage","valid","validity","form","checkValidity","lastValues","_objectSpread","_defineProperty","lastErrors","lastIsInputValid","resetForm","formData","arguments","length","undefined","setInputValue"],"sources":["/Users/dk/dev/mesto-react/src/hooks/useFormValidator.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nexport default function useFormValidator() {\n    \n    const [inputValues, setInputValues] = useState({});\n    const [inputErrors, setInputErrors] = useState({});\n    const [isValid, setIsValid] = useState(false);\n    const [isInputValid, setIsInputValid] = useState({});\n\n    function handleChange(evt) {\n        const name = evt.target.name;\n        const value = evt.target.value;\n        const validationMessage = evt.target.validationMessage;\n        const valid = evt.target.validity.valid;\n        const form = evt.target.form;\n\n        setIsValid(form.checkValidity());\n\n        setInputValues((lastValues) => {\n            return { ...lastValues, [name]: value }\n        })\n\n        setInputErrors((lastErrors) => {\n            return { ...lastErrors, [name]: validationMessage }\n        })\n\n        setIsInputValid((lastIsInputValid) => {\n            return { ...lastIsInputValid, [name]: valid }\n        })\n    }\n\n    function resetForm(formData = {}) {\n        setInputValues(formData);\n        setInputErrors({});\n        setIsValid(false);\n        setIsInputValid({});\n    }\n\n    const setInputValue = useCallback((name, value) => {\n        setInputValues((lastValues) => {\n            return { ...lastValues, [name]: value }\n        })\n    }, [])\n\n    return { inputValues, inputErrors, isValid, isInputValid, handleChange, resetForm, setInputValue }\n}"],"mappings":"8UAAA,OAASA,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CAE7C,cAAe,SAAS,CAAAC,gBAAgBA,CAAA,CAAG,CAEvC,IAAAC,SAAA,CAAsCF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAG,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA3CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAClC,IAAAI,UAAA,CAAsCP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAQ,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA3CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAClC,IAAAG,UAAA,CAA8BX,QAAQ,CAAC,KAAK,CAAC,CAAAY,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAtCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC1B,IAAAG,UAAA,CAAwCf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAgB,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAA7CE,YAAY,CAAAD,UAAA,IAAEE,eAAe,CAAAF,UAAA,IAEpC,QAAS,CAAAG,YAAYA,CAACC,GAAG,CAAE,CACvB,GAAM,CAAAC,IAAI,CAAGD,GAAG,CAACE,MAAM,CAACD,IAAI,CAC5B,GAAM,CAAAE,KAAK,CAAGH,GAAG,CAACE,MAAM,CAACC,KAAK,CAC9B,GAAM,CAAAC,iBAAiB,CAAGJ,GAAG,CAACE,MAAM,CAACE,iBAAiB,CACtD,GAAM,CAAAC,KAAK,CAAGL,GAAG,CAACE,MAAM,CAACI,QAAQ,CAACD,KAAK,CACvC,GAAM,CAAAE,IAAI,CAAGP,GAAG,CAACE,MAAM,CAACK,IAAI,CAE5Bb,UAAU,CAACa,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC,CAEhCtB,cAAc,CAAC,SAACuB,UAAU,CAAK,CAC3B,OAAAC,aAAA,CAAAA,aAAA,IAAYD,UAAU,KAAAE,eAAA,IAAGV,IAAI,CAAGE,KAAK,GACzC,CAAC,CAAC,CAEFb,cAAc,CAAC,SAACsB,UAAU,CAAK,CAC3B,OAAAF,aAAA,CAAAA,aAAA,IAAYE,UAAU,KAAAD,eAAA,IAAGV,IAAI,CAAGG,iBAAiB,GACrD,CAAC,CAAC,CAEFN,eAAe,CAAC,SAACe,gBAAgB,CAAK,CAClC,OAAAH,aAAA,CAAAA,aAAA,IAAYG,gBAAgB,KAAAF,eAAA,IAAGV,IAAI,CAAGI,KAAK,GAC/C,CAAC,CAAC,CACN,CAEA,QAAS,CAAAS,SAASA,CAAA,CAAgB,IAAf,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC5B9B,cAAc,CAAC6B,QAAQ,CAAC,CACxBzB,cAAc,CAAC,CAAC,CAAC,CAAC,CAClBI,UAAU,CAAC,KAAK,CAAC,CACjBI,eAAe,CAAC,CAAC,CAAC,CAAC,CACvB,CAEA,GAAM,CAAAqB,aAAa,CAAGxC,WAAW,CAAC,SAACsB,IAAI,CAAEE,KAAK,CAAK,CAC/CjB,cAAc,CAAC,SAACuB,UAAU,CAAK,CAC3B,OAAAC,aAAA,CAAAA,aAAA,IAAYD,UAAU,KAAAE,eAAA,IAAGV,IAAI,CAAGE,KAAK,GACzC,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAElB,WAAW,CAAXA,WAAW,CAAEI,WAAW,CAAXA,WAAW,CAAEI,OAAO,CAAPA,OAAO,CAAEI,YAAY,CAAZA,YAAY,CAAEE,YAAY,CAAZA,YAAY,CAAEe,SAAS,CAATA,SAAS,CAAEK,aAAa,CAAbA,aAAc,CAAC,CACtG"},"metadata":{},"sourceType":"module","externalDependencies":[]}