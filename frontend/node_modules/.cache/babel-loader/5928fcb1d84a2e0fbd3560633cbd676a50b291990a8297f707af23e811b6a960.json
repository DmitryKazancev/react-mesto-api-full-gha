{"ast":null,"code":"export const BASE_URL = 'https://api.nomoreparties.co';\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/singup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    return response.json();\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport function authorize(_ref) {\n  let {\n    email,\n    password\n  } = _ref;\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    return response.json();\n  }).then(res => {\n    return res;\n  });\n}\n;\nexport function checkToken(token) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Accept': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).then(res => {\n    return res;\n  });\n}","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","json","res","catch","err","console","log","authorize","_ref","checkToken","token"],"sources":["/Users/dk/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://api.nomoreparties.co';\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/singup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((response) => {\n    return response.json();\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n};\n\nexport function authorize({ email, password }) {\n\treturn fetch(`${BASE_URL}/signin`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ email, password })\n\t})\n    .then((response) => {\n        return response.json();\n      })\n      .then((res) => {\n        return res;\n      })\n};\n\nexport function checkToken(token) {\n\treturn fetch(`${BASE_URL}/users/me`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t'Accept': 'application/json',\n\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t}\n\t})\n\t.then((response) => {\n        return response.json();\n      })\n      .then((res) => {\n        return res;\n      })\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,8BAA8B;AAEtD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAK;IAClB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,SAASG,SAASA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEhB,KAAK;IAAED;EAAS,CAAC,GAAAiB,IAAA;EAC5C,OAAOf,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAClCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,cAAc,EAAE,kBAAkB;MAClC,QAAQ,EAAE;IACX,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAED;IAAS,CAAC;EACzC,CAAC,CAAC,CACEQ,IAAI,CAAEC,QAAQ,IAAK;IAChB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC;AACR;AAAC;AAED,OAAO,SAASO,UAAUA,CAACC,KAAK,EAAE;EACjC,OAAOjB,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACpCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACR,cAAc,EAAE,kBAAkB;MAClC,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAG,UAASe,KAAM;IAClC;EACD,CAAC,CAAC,CACDX,IAAI,CAAEC,QAAQ,IAAK;IACb,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}