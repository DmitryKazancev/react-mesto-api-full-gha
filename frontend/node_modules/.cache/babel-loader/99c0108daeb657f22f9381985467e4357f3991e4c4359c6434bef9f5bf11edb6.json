{"ast":null,"code":"import _classCallCheck from\"/Users/dk/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/dk/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";//Class API\nvar Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._baseUrl=options.baseUrl;this._headers=options.headers;this._authorization=options.headers.authorization;}//Get response function\n_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}//get info about user\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:{authorization:this._authorization}}).then(this._getResponseData);}//get array cards\n},{key:\"getCards\",value:function getCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:{authorization:this._authorization}}).then(this._getResponseData);}//update info about user\n},{key:\"setOwnerInfo\",value:function setOwnerInfo(ownerInfo){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:ownerInfo.nameInput,about:ownerInfo.jobInput})}).then(this._getResponseData);}//update user avatar\n},{key:\"setOwnerAvatar\",value:function setOwnerAvatar(ownerAvatar){return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:ownerAvatar.linkAvatar})}).then(this._getResponseData);}//create new card\n},{key:\"addNewCard\",value:function addNewCard(cardInfo){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:cardInfo.cardName,link:cardInfo.link})}).then(this._getResponseData);}//put like on card\n},{key:\"addLike\",value:function addLike(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'PUT',headers:this._headers}).then(this._getResponseData);}//delete like on card\n},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'DELETE',headers:this._headers}).then(this._getResponseData);}//delete card created by user\n},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(this._getResponseData);}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-66',headers:{authorization:'0be97cdd-5214-4857-975b-3ef352f3ad1f','Content-Type':'application/json'}});export default api;","map":{"version":3,"names":["Api","options","_classCallCheck","_baseUrl","baseUrl","_headers","headers","_authorization","authorization","_createClass","key","value","_getResponseData","res","ok","json","Promise","reject","concat","status","getUserInfo","fetch","then","getCards","setOwnerInfo","ownerInfo","method","body","JSON","stringify","name","nameInput","about","jobInput","setOwnerAvatar","ownerAvatar","avatar","linkAvatar","addNewCard","cardInfo","cardName","link","addLike","cardId","deleteLike","deleteCard","api"],"sources":["/Users/dk/dev/mesto-react/src/utils/api.js"],"sourcesContent":["//Class API\nclass Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n        this._authorization = options.headers.authorization;\n    }\n\n    //Get response function\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        else {\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    }\n\n    //get info about user\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: {\n                authorization: this._authorization\n            }\n        })\n            .then(this._getResponseData)\n    }\n\n    //get array cards\n    getCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: {\n                authorization: this._authorization\n            }\n        })\n            .then(this._getResponseData)\n    }\n\n    //update info about user\n    setOwnerInfo(ownerInfo) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: ownerInfo.nameInput,\n                about: ownerInfo.jobInput\n            })\n        })\n            .then(this._getResponseData)\n    }\n\n    //update user avatar\n    setOwnerAvatar(ownerAvatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: ownerAvatar.linkAvatar\n            })\n        })\n            .then(this._getResponseData)\n    }\n\n    //create new card\n    addNewCard(cardInfo) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: cardInfo.cardName,\n                link: cardInfo.link\n            })\n        })\n            .then(this._getResponseData)\n    }\n\n    //put like on card\n    addLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n\n    //delete like on card\n    deleteLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n\n    //delete card created by user\n    deleteCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-66',\n    headers: {\n        authorization: '0be97cdd-5214-4857-975b-3ef352f3ad1f',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}