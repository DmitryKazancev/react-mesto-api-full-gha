{"ast":null,"code":"var _jsxFileName = \"/Users/dk/dev/mesto-react/src/components/AddPlacePopup/AddPlacePopup.js\",\n  _s = $RefreshSig$();\nimport useFormValidator from \"../../utils/useFormValidator\";\nimport PopupWithForm from \"../PopupWithForms/PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPlacePopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onAddPlace\n  } = _ref;\n  const {\n    inputValues,\n    inputErrors,\n    isValid,\n    isInputValid,\n    handleChange,\n    resetForm,\n    setInputValue\n  } = useFormValidator();\n  function closePopup() {\n    onClose();\n    resetForm();\n  }\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddPlace({\n      title: inputValues.title,\n      link: inputValues.link\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"add-card\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    textButton: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: closePopup,\n    isValid: isValid,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"name-card\",\n      type: \"text\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      className: `popup__input popup__input_card_name ${isInputValid.cardName === undefined || isInputValid.cardName ? '' : 'popup__input_type_error'}`,\n      name: \"cardName\",\n      minLength: 2,\n      maxLength: 20,\n      required: \"\",\n      value: inputValues.cardName ? inputValues.cardName : '',\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"name-card-error\",\n      className: \"popup__error popup__error_field_first\",\n      children: inputErrors.cardName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"link-card\",\n      type: \"url\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      className: `popup__input popup__input_card_url ${isInputValid.link === undefined || isInputValid.link ? '' : 'popup__input_type_error'}`,\n      name: \"link\",\n      required: \"\",\n      value: inputValues.link ? inputValues.link : '',\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"link-card-error\",\n      className: \"popup__error popup__error_field_second\",\n      children: inputErrors.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(AddPlacePopup, \"q0spWoqESmo1mGuWjFyN4Bqs49s=\", false, function () {\n  return [useFormValidator];\n});\n_c = AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["useFormValidator","PopupWithForm","jsxDEV","_jsxDEV","AddPlacePopup","_ref","_s","isOpen","onClose","onAddPlace","inputValues","inputErrors","isValid","isInputValid","handleChange","resetForm","setInputValue","closePopup","handleSubmit","evt","preventDefault","title","link","name","textButton","onSubmit","children","id","type","placeholder","className","cardName","undefined","minLength","maxLength","required","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dk/dev/mesto-react/src/components/AddPlacePopup/AddPlacePopup.js"],"sourcesContent":["import useFormValidator from \"../../utils/useFormValidator\";\nimport PopupWithForm from \"../PopupWithForms/PopupWithForm\";\n\nexport default function AddPlacePopup({ isOpen, onClose, onAddPlace}){\n    const {inputValues, inputErrors, isValid, isInputValid, handleChange, resetForm, setInputValue} = useFormValidator();\n    \n    function closePopup () {\n        onClose();\n        resetForm()\n      }\n      function handleSubmit(evt){\n        evt.preventDefault();\n        onAddPlace({title: inputValues.title, link: inputValues.link});\n      }\n\n    return(\n        <PopupWithForm name='add-card' title='Новое место' textButton='Создать' isOpen={isOpen} onClose={closePopup} isValid={isValid} onSubmit={handleSubmit}>\n          <input\n            id=\"name-card\"\n            type=\"text\"\n            placeholder=\"Название\"\n            className={`popup__input popup__input_card_name ${isInputValid.cardName === undefined || isInputValid.cardName ? '' : 'popup__input_type_error' }`}\n            name=\"cardName\"\n            minLength={2}\n            maxLength={20}\n            required=\"\"\n            value={inputValues.cardName ? inputValues.cardName : ''}\n            onChange={handleChange}\n          />\n          <span\n            id=\"name-card-error\"\n            className=\"popup__error popup__error_field_first\"\n          >{inputErrors.cardName}</span>\n          <input\n            id=\"link-card\"\n            type=\"url\"\n            placeholder=\"Ссылка на картинку\"\n            className={`popup__input popup__input_card_url ${isInputValid.link === undefined || isInputValid.link ? '' : 'popup__input_type_error' }`}\n            name=\"link\"\n            required=\"\"\n            value={inputValues.link ? inputValues.link : ''}\n            onChange={handleChange}\n          />\n          <span\n            id=\"link-card-error\"\n            className=\"popup__error popup__error_field_second\"\n          >{inputErrors.link}</span>\n        </PopupWithForm>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}